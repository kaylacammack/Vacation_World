/* Universal selector targets all elements on a page */
* {
    border: 1px solid red;
}

p {
    color: green;
}

h1 {
    color: maroon;
}

/* To select an HTML element by its class using CSS, a period must be prepended to the class's name */

.title {
    color: teal;
}

.uppercase {
    text-transform: uppercase;
}

#article-title {
    font-family: cursive;
}

/* The attribute selector can be used to target HTML elements that already contain attributes. Elements of the same type can be targeted differently by their attribute value. This alleviates the need to add new code, like the class or id attributes. */

a[href*='florence'] {
    color: lightgreen;
}

a[href*='seoul'] {
    color: lightpink;
}

/* Pseudo classes changes appearance of elements. Ex are :focus, :visited, :disabled, & :active */

a:hover {
    color: darkorange;
}

/* CSS classes are meant to be reused over many elements. An ID is meant to style only one element. ID's override the styles of types & classes */
/* Class */
.heading-background {
    background-color: aqua;
}
/* ID */
#publish-time {
    color: gray;
}

h5 {
    color: yellow;
}

.author-class {
    color: pink;
}

#author-id {
    color: cornflowerblue;
}

/* You can require an HTML element to have 2 or more CSS selectors at the same time. This is done by combing multiple selectors, which is referred to as chaining.  */

h2.destination {
    font-family: Tahoma;
}

/* CSS supports selecting elements that are nested within other HTML elements, aka descendants */
/* Descendants have a higher specificity than a class */

.description h5 {
    color: blueviolet;
}

li h4 {
    color: gold;
}

h4 {
    color: dodgerblue;
}

/* You can use multiple CSS selectors at once to avoid writing repetitive code */

h5, li {
    font-family: monospace;
}